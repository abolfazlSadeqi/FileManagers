// <auto-generated />
using System;
using Infra.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infra.EF.Migrations
{
    [DbContext(typeof(FileManagersContext))]
    [Migration("20240403123704_FileTablePDFAdded")]
    partial class FileTablePDFAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entites.FilePdfManagers.FilePdfManager", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("CachedFileSize")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreationTime")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Creation_time");

                    b.Property<byte[]>("FileStream")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("File_type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(20)");

                    b.Property<bool>("Isarchive")
                        .HasColumnType("bit");

                    b.Property<bool>("Isdirectory")
                        .HasColumnType("bit");

                    b.Property<bool>("Ishidden")
                        .HasColumnType("bit");

                    b.Property<bool>("Isoffline")
                        .HasColumnType("bit");

                    b.Property<bool>("Isreadonly")
                        .HasColumnType("bit");

                    b.Property<bool>("Issystem")
                        .HasColumnType("bit");

                    b.Property<bool>("Istemporary")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastAccessTime")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Last_access_time");

                    b.Property<DateTimeOffset>("LastWriteTime")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Last_write_time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("FilePdfManager", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
